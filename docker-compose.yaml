version: '3'

services:
  flask-api:
    build:
      context: ./app
      dockerfile: ./src/api/Dockerfile
    container_name: flask_api
    environment:
      DB_HOST: postgresql_db
      UM_HOST: user_management
    ports:
      - "5002:5002"
    depends_on:
      postgresql:
        condition: service_healthy
    
  flask-user-management:
    build:
      context: ./app
      dockerfile: ./src/user_management/Dockerfile
    container_name: user_management
    environment:
      DB_HOST: postgresql_db
      API_HOST: flask_api
    ports:
      - "5001:5001"
    depends_on:
      postgresql:
        condition: service_healthy

  flask-ui:
    build:
      context: ./app
      dockerfile: ./src/Dockerfile
    container_name: flask_ui
    environment:
      API_HOST: flask_api
      UM_HOST: user_management
    ports:
      - "5000:5000"
    depends_on:
      - flask-api
      - flask-user-management
    extra_hosts:
      - "host.docker.internal:host-gateway"

  postgresql:
    image: postgres:latest
    container_name: postgresql_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d database"]
      interval: 10s
      timeout: 5s
      retries: 5